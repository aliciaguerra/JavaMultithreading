Java is a multi-threaded programming language which means we can develop multi-threaded programs using Java. 
A multi-threaded program contains two or more parts that can run concurrently and each part can handle 
different parts at the same time making optimal use of the available use specially when your computer
has multiple CPUs.
By definition multitasking is when multiple processes share common processing resources such as a CPU.
Multithreading extends the idea of multitasking into applications where you can subdivide specific 
operations within a single application into individual threads. Each of the threads can run in parallel.
The OS divides processing time not only among different operations but also among each thread with an
application.
Multithreading enables you to write in a way where mutliple activities can proceed concurrently in the
same program.

LIFE CYCLE OF A THREAD
A thread goes through various stages in its life cycle. For example, a thread is born, started, runs, or
dies.
-New: A thread begins its life cycle in the new state. It remains in this state until the program starts the
thread. It is also referred to as a thread.
-Runnable: After a newly born thread is started, the thread becomes runnable. A thread in this state is
considered to be executing its task.
